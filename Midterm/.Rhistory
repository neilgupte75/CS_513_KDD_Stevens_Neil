predict_k5
table(Actual=test$Species, fit)
test<-iris_normalized[index,]
training <-iris_normalized[-index,]
predict_k5 <- kknn(formula=Species~., training, test[,-5], k=5,kernel ="triangular" )
fit <- fitted(predict_k5)
table(Actual=test$Species,fit)
install.packages("VIM")
library('VIM')
rm(list=ls())
library(rpart)
library(rpart.plot)  			# Enhanced tree plots
library(rattle)           # Fancy tree plot
library(RColorBrewer)     # colors needed for rattle
install.packages("rpart.plot")     # Enhanced tree plots
install.packages("rpart.plot")
install.packages("rpart")
install.packages("rpart.plot")     # Enhanced tree plots
install.packages("rattle")         # Fancy tree plot
install.packages("RColorBrewer")   # colors needed for rattle
library(rpart)
library(rpart.plot)  			# Enhanced tree plots
library(rattle)           # Fancy tree plot
library(RColorBrewer)     # colors needed for rattle
filename<-file.choose()
dsn<-  read.csv(filename )
set.seed(111)
?ifelse
index<-sort(sample(nrow(dsn),round(.25*nrow(dsn))))
training<-dsn[-index,]
test<-dsn[index,]
dev.off()
CART_class<-rpart( Survived~.,data=training)
rpart.plot(CART_class)
CART_predict2<-predict(CART_class,test, type="class")
table(Actual=test[,4],CART=CART_predict2)
CART_predict<-predict(CART_class,test)
CART_predict<-predict(CART_class,test)
str(CART_predict)
CART_predict_cat<-ifelse(CART_predict[,1]<=.5,'Yes','No')
table(Actual=test[,4],CART=CART_predict_cat)
CART_wrong<-sum(test[,4]!=CART_predict_cat)
CART_error_rate<-CART_wrong/length(test[,4])
CART_error_rate
CART_predict2<-predict(CART_class,test, type="class")
CART_wrong2<-sum(test[,4]!=CART_predict2)
CART_error_rate2<-CART_wrong2/length(test[,4])
CART_error_rate2
install.packages("C50")
rm(list=ls())
filename<-file.choose()
dsn<-  read.csv(filename )
dev.off
?na.omit()
dsn2<-na.omit(dsn)
set.seed(123)
?ifelse
index<-sort(sample(nrow(dsn),round(.25*nrow(dsn))))
training<-dsn[-index,]
test<-dsn[index,]
#install.packages("C50", repos="http://R-Forge.R-project.org")
#install.packages("C50")
library('C50')
C50_class <- C5.0( Survived~.,data=training )
summary(C50_class )
dev.off()
plot(C50_class)
C50_predict<-predict( C50_class ,test , type="class" )
table(actual=test[,4],C50=C50_predict)
wrong<- (test[,4]!=C50_predict)
c50_rate<-sum(wrong)/length(test[,4])
c50_rate
plot(C50_class)
setwd("C:/cs 513 HOMEWORK/Midterm")
remove(list=ls())
library(kknn)
getwd()
?read.csv
#loading dataset
dataset<-read.csv('COVID19_v3.CSV',colClasses=c("Class"="factor" ))
df<- data.frame(dataset)
getwd()
?read.csv
#loading dataset
dataset<-read.csv('COVID19_v3.CSV',colClasses=c("Infected"="factor" ))
df<- data.frame(dataset)
View(df)
summary(df)
df<-na.omit(df)
set.seed(221)
sample_size = round(nrow(df)*.70)
index <- sample(seq_len(nrow(df)), size = sample_size)
train <- df[index, ]
test <- df[-index, ]
predict_k1 <- kknn(formula= Infected~., train[,-1] , test[,-1], k=5,kernel ="rectangular"  )
fit <- fitted(predict_k1)
table(test$Infected,fit)
remove(list=ls())
library(kknn)
getwd()
?read.csv
#loading dataset
dataset<-read.csv('COVID19_v3.CSV',colClasses=c("Infected"="factor" ))
df<- data.frame(dataset)
View(df)
summary(df)
df<-na.omit(df)
set.seed(221)
sample_size = round(nrow(df)*.70)
index <- sample(seq_len(nrow(df)), size = sample_size)
norm<-function(x) { (x -min(x))/(max(x)-min(x))   }
minmaxnorm <- as.data.frame(lapply(dataset1[,c(2,3,4,5,6)], norm))
norm<-function(x) { (x -min(x))/(max(x)-min(x))   }
minmaxnorm <- as.data.frame(lapply(df[,c(2,3,4,5,6)], norm))
remove(list=ls())
library(kknn)
getwd()
?read.csv
#loading dataset
dataset<-read.csv('COVID19_v3.CSV',colClasses=c("Infected"="factor" ))
df<- data.frame(dataset)
View(df)
summary(df)
df<-na.omit(df)
df$MaritalStatus<- factor(df$MaritalStatus , levels = c("Married","Divorced","Single") , labels = c(0,1,2))
summary(dataset1)
?set.seed
set.seed(222)
set.seed(221)
sample_size = round(nrow(df)*.70)
index <- sample(seq_len(nrow(df)), size = sample_size)
norm<-function(x) { (x -min(x))/(max(x)-min(x))   }
minmaxnorm <- as.data.frame(lapply(df[,c(2,3,4,5,6)], norm))
minmaxnorm <- as.data.frame(lapply(df[,c(2,5,6)], norm))
train <- minmaxnorm[index, ]
test <- minmaxnorm[-index, ]
predict_k1 <- kknn(formula= Infected~., train[,-1] , test[,-1], k=5,kernel ="rectangular"  )
remove(list=ls())
library(kknn)
getwd()
?read.csv
#loading dataset
dataset<-read.csv('COVID19_v3.CSV',colClasses=c("Class"="factor" ))
df<- data.frame(dataset)
View(df)
summary(df)
df<-na.omit(df)
set.seed(221)
sample_size = round(nrow(df)*.70)
index <- sample(seq_len(nrow(df)), size = sample_size)
train <- df[index, ]
test <- df[-index, ]
predict_k1 <- kknn(formula= Infected~., train[,-1] , test[,-1], k=5,kernel ="rectangular"  )
predict_k1 <- kknn(formula= Infected~., train[,-1] , test[,-1], k=5,kernel ="rectangular"  )
fit <- fitted(predict_k1)
table(test$Infected,fit)
wrong<- ( test$Class!=fit)
rate<-sum(wrong)/length(wrong)
wrong<- ( test$Infected!=fit)
rate<-sum(wrong)/length(wrong)
rate<-sum(wrong)/length(wrong)
rate
remove(list=ls())
library(kknn)
getwd()
?read.csv
#loading dataset
dataset<-read.csv('COVID19_v3.CSV',colClasses=c("Class"="factor" ))
df<- data.frame(dataset)
View(df)
summary(df)
df<-na.omit(df)
set.seed(221)
sample_size = round(nrow(df)*.70)
index <- sample(seq_len(nrow(df)), size = sample_size)
train <- df[index, ]
test <- df[-index, ]
predict_k1 <- kknn(formula= Infected~., train[,-1] , test[,-1], k=5,kernel ="rectangular"  )
fit <- fitted(predict_k1)
confusionmatrix<-table(test$Infected,fit)
wrong<- ( test$Infected!=fit)
rate<-sum(wrong)/length(wrong)
rate
accuracy <- function(x){sum(diag(x)/(sum(rowSums(x)))) * 100}
accuracy(confusionmatrix1)
accuracy <- function(x){sum(diag(x)/(sum(rowSums(x)))) * 100}
accuracy(confusionmatrix)
remove(list=ls())
library(kknn)
getwd()
?read.csv
#loading dataset
dataset<-read.csv('COVID19_v3.CSV',colClasses=c("Class"="factor" ))
df<- data.frame(dataset)
View(df)
summary(df)
df<-na.omit(df)
set.seed(221)
sample_size = round(nrow(df)*.70)
index <- sample(seq_len(nrow(df)), size = sample_size)
train <- df[index, ]
test <- df[-index, ]
predict_k1 <- kknn(formula= Infected~., train[,-1] , test[,-1], k=5,kernel ="triangular"  )
fit <- fitted(predict_k1)
confusionmatrix<-table(test$Infected,fit)
wrong<- ( test$Infected!=fit)
rate<-sum(wrong)/length(wrong)
rate
accuracy <- function(x){sum(diag(x)/(sum(rowSums(x)))) * 100}
accuracy(confusionmatrix)
remove(list=ls())
library(kknn)
getwd()
?read.csv
#loading dataset
dataset<-read.csv('COVID19_v3.CSV')
df<- data.frame(dataset)
View(df)
summary(df)
df<-na.omit(df)
set.seed(221)
sample_size = round(nrow(df)*.70)
index <- sample(seq_len(nrow(df)), size = sample_size)
train <- df[index, ]
test <- df[-index, ]
predict_k1 <- kknn(formula= Infected~., train[,-1] , test[,-1], k=5,kernel ="triangular"  )
fit <- fitted(predict_k1)
confusionmatrix<-table(test$Infected,fit)
wrong<- ( test$Infected!=fit)
rate<-sum(wrong)/length(wrong)
rate
accuracy <- function(x){sum(diag(x)/(sum(rowSums(x)))) * 100}
accuracy(confusionmatrix)
remove(list=ls())
library(kknn)
getwd()
?read.csv
#loading dataset
dataset<-read.csv('COVID19_v3.CSV')
df<- data.frame(dataset)
View(df)
summary(df)
df<-na.omit(df)
sample_size = round(nrow(df)*.70)
index <- sample(seq_len(nrow(df)), size = sample_size)
train <- df[index, ]
test <- df[-index, ]
predict_k1 <- kknn(formula= Infected~., train[,-1] , test[,-1], k=5,kernel ="triangular"  )
fit <- fitted(predict_k1)
confusionmatrix<-table(test$Infected,fit)
wrong<- ( test$Infected!=fit)
rate<-sum(wrong)/length(wrong)
rate
accuracy <- function(x){sum(diag(x)/(sum(rowSums(x)))) * 100}
accuracy(confusionmatrix)
confusionmatrix
remove(list=ls())
library(kknn)
getwd()
?read.csv
#loading dataset
dataset<-read.csv('COVID19_v3.CSV')
df<- data.frame(dataset)
View(df)
summary(df)
df<-na.omit(df)
sample_size = round(nrow(df)*.70)
index <- sample(seq_len(nrow(df)), size = sample_size)
train <- df[index, ]
test <- df[-index, ]
predict_k1 <- kknn(formula= Infected~., train[,-1] , test[,-1], k=5,kernel ="rectangular"  )
fit <- fitted(predict_k1)
confusionmatrix<-table(test$Infected,fit)
confusionmatrix
wrong<- ( test$Infected!=fit)
rate<-sum(wrong)/length(wrong)
rate
accuracy <- function(x){sum(diag(x)/(sum(rowSums(x)))) * 100}
accuracy(confusionmatrix)
remove(list=ls())
library(kknn)
getwd()
?read.csv
#loading dataset
dataset<-read.csv('COVID19_v3.CSV')
df<- data.frame(dataset)
View(df)
summary(df)
df<-na.omit(df)
sample_size = round(nrow(df)*.70)
index <- sample(seq_len(nrow(df)), size = sample_size)
train <- df[index, ]
test <- df[-index, ]
predict_k1 <- kknn(formula= Infected~., train[,-1] , test[,-1], k=5,kernel ="rectangular"  )
fit <- fitted(predict_k1)
confusionmatrix<-table(test$Infected,fit)
confusionmatrix
wrong<- ( test$Infected!=fit)
rate<-sum(wrong)/length(wrong)
rate
accuracy <- function(x){sum(diag(x)/(sum(rowSums(x)))) * 100}
accuracy(confusionmatrix)
#  Course          :CS 513 Data Mining
#  First Name      : Neil
#  Last Name       : Gupte
#  Id              : 10445674
#  purpose         : q2 Midterm
#clears memory cache
rm(list=ls())
getwd()
?read.csv
#loading dataset
dataset<-read.csv('COVID19_v3.CSV')
#min.max,median,summary of each column
summary(dataset)
typeof(dataset)
#creates a dataframe
df<- data.frame(dataset)
View(df)
summary(df)
#sum of all missing values
sum(is.na(df))
colSums(is.na(df))
#frequency table
ftable(df$MaritalStatus,df$Infected)
#scatterplot
pairs(df[c(2,4,6)], main = "Covid Infected ",
pch = 22, bg = c("yellow","red")[factor(df$Infected)])
#boxplot
boxplot(df[c(2,4,6)])
#change missing values to mean
df$Cases[is.na(df$Cases)] <- round(mean(df$Cases, na.rm = TRUE))
#  Course          :CS 513 Data Mining
#  First Name      : Neil
#  Last Name       : Gupte
#  Id              : 10445674
#  purpose         : q5 Midterm
rm(list=ls())
#import libraries
library(e1071)
library(class)
getwd()
?read.csv
#loading dataset
dataset<-read.csv('COVID19_v3.CSV')
df<- data.frame(dataset)
View(df)
summary(df)
#remove missing values
df<-na.omit(df)
?cut
#discretize data
df$MonthAtHospital<- cut(df$MonthAtHospital,breaks=c(-1,6,100),labels =c(0,1),right = FALSE)
df$Age<- cut(df$Age, breaks = c(-1,35,50,120),labels = c(0,1,2),right=FALSE)
sample_size = round(nrow(df)*.70)
index <- sample(seq_len(nrow(df)), size = sample_size)
train <- df[index, ]
test <- df[-index, ]
nb<- naiveBayes(Infected ~ ., data = train)
#Predicting class for test set
predict <- predict(nb, test)
#Confusion Matrix
conf_matrix <- table(nb=predict,class=test$Infected)
print(conf_matrix)
#Accuracy
accuracy <- function(x){sum(diag(x)/(sum(rowSums(x)))) * 100}
accuracy(conf_matrix)
wrong<-sum(test$Infected!=predict)
error_rate<-wrong/length(test$Infected)
error_rate
#discretize data
df$MonthAtHospital<- cut(df$MonthAtHospital,breaks=c(-1,6,100),labels =c("less than 6 months","6 or more months"),right = FALSE)
rm(list=ls())
#import libraries
library(e1071)
library(class)
getwd()
?read.csv
#loading dataset
dataset<-read.csv('COVID19_v3.CSV')
df<- data.frame(dataset)
View(df)
summary(df)
#remove missing values
df<-na.omit(df)
?cut
#discretize data
df$MonthAtHospital<- cut(df$MonthAtHospital,breaks=c(-1,6,100),labels =c("less than 6 months","6 or more months"),right = FALSE)
df$Age<- cut(df$Age, breaks = c(-1,35,50,120),labels = c(0,1,2),right=FALSE)
sample_size = round(nrow(df)*.70)
index <- sample(seq_len(nrow(df)), size = sample_size)
train <- df[index, ]
test <- df[-index, ]
nb<- naiveBayes(Infected ~ ., data = train)
#Predicting class for test set
predict <- predict(nb, test)
#Confusion Matrix
conf_matrix <- table(nb=predict,class=test$Infected)
print(conf_matrix)
#Accuracy
accuracy <- function(x){sum(diag(x)/(sum(rowSums(x)))) * 100}
accuracy(conf_matrix)
wrong<-sum(test$Infected!=predict)
error_rate<-wrong/length(test$Infected)
error_rate
rm(list=ls())
#import libraries
library(e1071)
library(class)
getwd()
?read.csv
#loading dataset
dataset<-read.csv('COVID19_v3.CSV')
df<- data.frame(dataset)
View(df)
summary(df)
#remove missing values
df<-na.omit(df)
?cut
#discretize data
df$MonthAtHospital<- cut(df$MonthAtHospital,breaks=c(-1,6,100),labels =c("less than 6 months","6 or more months"),right = FALSE)
df$Age<- cut(df$Age, breaks = c(-1,35,50,120),labels = c("less than 35","35 to 50","51 or over"),right=FALSE)
sample_size = round(nrow(df)*.70)
index <- sample(seq_len(nrow(df)), size = sample_size)
train <- df[index, ]
test <- df[-index, ]
nb<- naiveBayes(Infected ~ ., data = train)
#Predicting class for test set
predict <- predict(nb, test)
#Confusion Matrix
conf_matrix <- table(nb=predict,class=test$Infected)
print(conf_matrix)
accuracy <- function(x){sum(diag(x)/(sum(rowSums(x)))) * 100}
accuracy(conf_matrix)
wrong<-sum(test$Infected!=predict)
error_rate<-wrong/length(test$Infected)
error_rate
#########################################################
##  Step 0: Clear the environment
##
##
#########################################################
rm(list=ls())
library(rpart)
library(rpart.plot)  			# Enhanced tree plots
library(rattle)           # Fancy tree plot
library(RColorBrewer)     # colors needed for rattle
dataset<-read.csv('COVID19_v3.CSV')
df<- data.frame(dataset)
View(df)
summary(df)
df<-na.omit(df)
#discretize data
df$MonthAtHospital<- cut(df$MonthAtHospital,breaks=c(-1,6,100),labels =c("less than 6 months","6 or more months"),right = FALSE)
df$Age<- cut(df$Age, breaks = c(-1,35,50,120),labels = c("less than 35","35 to 50","51 or over"),right=FALSE)
set.seed(222)
sample_size = round(nrow(df)*.70)
index <- sample(seq_len(nrow(df)), size = sample_size)
train <- df[index, ]
test <- df[-index, ]
?rpart
cartmodel <- rpart(Infected ~ ., data = train[,-1], method = "class")
rpart.plot(cartmodel)
fancyRpartPlot(cartmodel)
CART_predict2<-predict(cartmodel,test, type="class")
df<-as.data.frame(cbind(test,CART_predict2))
table(Actual=test[,"Infected"],CART=CART_predict2)
CART_wrong<-sum(test[,"Infected"]!=CART_predict2)
error_rate=CART_wrong/length(test$Infected)
error_rate
table(Actual=test[,"Infected"],CART=CART_predict2)
CART_wrong<-sum(test[,"Infected"]!=CART_predict2)
error_rate=CART_wrong/length(test$Infected)
error_rate
#########################################################
##  Step 0: Clear the environment
##
##
#########################################################
rm(list=ls())
library(rpart)
library(rpart.plot)  			# Enhanced tree plots
library(rattle)           # Fancy tree plot
library(RColorBrewer)     # colors needed for rattle
dataset<-read.csv('COVID19_v3.CSV')
df<- data.frame(dataset)
View(df)
summary(df)
df<-na.omit(df)
#discretize data
df$MonthAtHospital<- cut(df$MonthAtHospital,breaks=c(-1,6,100),labels =c("less than 6 months","6 or more months"),right = FALSE)
df$Age<- cut(df$Age, breaks = c(-1,35,50,120),labels = c("less than 35","35 to 50","51 or over"),right=FALSE)
set.seed(222)
sample_size = round(nrow(df)*.70)
index <- sample(seq_len(nrow(df)), size = sample_size)
train <- df[index, ]
test <- df[-index, ]
?rpart
#for cart classifier
cartmodel <- rpart(Infected ~ ., data = train[,-1], method = "class")
rpart.plot(cartmodel)
fancyRpartPlot(cartmodel)
CART_predict2<-predict(cartmodel,test, type="class")
df<-as.data.frame(cbind(test,CART_predict2))
#confusion matrix
conf_matrix<-table(Actual=test[,"Infected"],CART=CART_predict2)
CART_wrong<-sum(test[,"Infected"]!=CART_predict2)
error_rate=CART_wrong/length(test$Infected)
error_rate
#Accuracy
accuracy <- function(x){sum(diag(x)/(sum(rowSums(x)))) * 100}
accuracy(conf_matrix)
